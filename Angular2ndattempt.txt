1.

import { Component, EventEmitter, Input, Output } from '@angular/core';

@Component({
  selector: 'app-value-provider',
  template: `
    <input type="text" (input)="onInput($event.target.value)">
  `
})
export class ValueProviderComponent {
  @Output() typedValue = new EventEmitter<string>();

  onInput(value: string) {
    this.typedValue.emit(value);
  }
}

@Component({
  selector: 'app-value-receiver',
  template: `
    <div>Received value: {{printValue}}</div>
  `
})
export class ValueReceiverComponent {
  @Input() printValue: string;
}

@Component({
  selector: 'app-root',
  template: `
    <h1>Value Provider:</h1>
    <app-value-provider (typedValue)="onTypedValue($event)"></app-value-provider>

    <h1>Value Receiver:</h1>
    <app-value-receiver [printValue]="typedValue"></app-value-receiver>
  `
})
export class AppComponent {
  typedValue: string;

  onTypedValue(value: string) {
    this.typedValue = value;
  }
}
-------------------------------------------------------------------------

2. 


import { Component } from '@angular/core';

@Component({
    selector: 'counter',
    template: `
        <h2 class="counter">       
           {{counter}}
        </h2>
        <button class = "counter-button" (click)="increment()">Click</button>
    `,
    styles: [`
        .counter-button {
            font-size: 1rem;
            padding: 5px 10px;
            color:  #585858;
        }
    `]
})

export class CounterComponent {

constructor () {}
counter =  42;
increment() {
    this.counter++;
  }
}
--------------------------------------------------------------------------------

3.

  Guardservice.ts 
import { Injectable } from '@angular/core';
import { CanActivate,Router} from '@angular/router';

@Injectable({
  providedIn: 'root',
})
export class GuardService implements CanActivate
{
  constructor(private router: Router) {}

  canActivate(): boolean {
    const token = localStorage.getItem('token');
    if (token && token.length > 0) {
      return true;
    } else {
      this.router.navigate(['/Dashboard']);
      return false;
    }
  }
}




Routes.ts

import { Routes } from '@angular/router';
import {
    PublicComponent,
    DashboardComponent,
    LoginComponent,
    Component404
   
} from '../components';
// import {NotFoundComponent} from '../components/not-found/not-found.component';

import { GuardService } from './guard.service';

export const routes: Routes = [
    // Implement your solution here
    //example { path: 'test', component: TestComponent, pathMatch: 'full'}
    { path: '', redirectTo: 'public', pathMatch: 'full' },
  { path: 'public', component: PublicComponent },
  { path: 'login', component: LoginComponent },
  {path: '404',component: Component404 },
  { path: 'dashboard', component: DashboardComponent,canActivate: [GuardService] },
//   { path: '**', component: NotFoundComponent }
];






